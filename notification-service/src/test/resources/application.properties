spring.application.name=notification-service
server.port=8084

spring.r2dbc.url=r2dbc:h2:mem:///notifications
spring.r2dbc.username=notifications_user_test
spring.r2dbc.password=notifications_password_test

kafka.replication.factor=1
kafka.partition.count=1
kafka.retention.days=1
kafka.bootstrap.servers=${spring.embedded.kafka.brokers: localhost:9092}
kafka.schema.registry.url=http://localhost:9091

spring.kafka.client-id=test-client
spring.kafka.consumer.group-id=test-client-group

spring.kafka.bootstrap-servers=${kafka.bootstrap.servers}
spring.kafka.properties.schema.registry.url=${kafka.schema.registry.url}
spring.kafka.properties.specific.avro.reader=true

spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.IntegerDeserializer
spring.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
spring.kafka.consumer.auto-offset-reset=earliest

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.IntegerSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
spring.kafka.producer.properties.auto.register.schemas=true
spring.kafka.producer.properties.group-id=test-producer-group

# Timeouts
notification-repository.timout.milliseconds=2000

confirmation.url=http://localhost:8080/api/notifications/confirm
mustache.location=templates

mail.message.from=mailer@example.com
spring.mail.host=test_host
spring.mail.username=test_username
spring.mail.password=test_password
spring.mail.protocol=smtp
spring.mail.port=2727
spring.mail.ssl.enabled=false

confirmation.duration.minutes=60





