# Kafka/Schema-Registry
schema.registry.url=http://schema-registry:8081
spring.kafka.consumer.properties.schema.registry.url=${schema.registry.url}
spring.kafka.producer.properties.schema.registry.url=${schema.registry.url}
spring.kafka.bootstrap-servers=kafka:9092
kafka.host=kafka

# Keycloak/OAuth2

## Called internally from within docker environment
oauth2.resourceserver.auth.url=http://keycloak:8080/realms/piper1970/protocol/openid-connect/auth
oauth2.resourceserver.token.url=http://keycloak:8080/realms/piper1970/protocol/openid-connect/token
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://keycloak:8080/realms/piper1970/protocol/openid-connect/certs

## Called from outside of docker environment
## 'keycloak' is mapped to '127.0.0.1' in hosts file
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://keycloak:8180/realms/piper1970

# Swagger OAuth2 Credentials (uses different port than ones above, so they can be accessed from browser)
open-api.oauth2.resourceserver.auth.url=http://keycloak:8180/realms/piper1970/protocol/openid-connect/auth
open-api.oauth2.resourceserver.token.url=http://keycloak:8180/realms/piper1970/protocol/openid-connect/token