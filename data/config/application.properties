server.shutdown=graceful

# Actuator
management.endpoint.health.probes.enabled=true
management.health.readinessstate.enabled=true
management.health.livenessstate.enabled=true
management.endpoint.metrics.access=read_only
management.endpoints.web.exposure.include=*
management.info.env.enabled=true

# Zipkin Tracing
management.tracing.enabled=true
management.tracing.sampling.probability=1.0
management.tracing.brave.span-joining-supported=${brave.supportsJoin:true}
management.tracing.baggage.remote-fields='user-name'
management.tracing.baggage.corrrelation.fields='user-name'
management.tracing.propagation.type='B3_MULTI'
management.zipkin.tracing.endpoint=${zipkin.baseUrl:http://localhost:9411}/api/v2/spans

# Logging setup for tracing
logging.level.root: INFO
logging.pattern="[%X{user_name}] [%X{traceId}/%X{spanId}] %-5p [%t] %C{2} - %m%n"

# Shortened kafka defaults
kafka.replication.factor=1
kafka.partition.count=3
kafka.retention.days=3
kafka.bootstrap.servers=localhost:9092
kafka.schema.registry.url=http://localhost:9091

spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.bootstrap-servers=${kafka.bootstrap.servers}
spring.kafka.properties.schema.registry.url=${kafka.schema.registry.url}
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.IntegerDeserializer
spring.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.IntegerSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
spring.kafka.consumer.properties.partition.assignment.strategy=org.apache.kafka.clients.consumer.RoundRobinAssignor




