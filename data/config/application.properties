
# Kafka
schema.registry.url=http://localhost:9091
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.properties.auto.register.schemas=true
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.properties.schema.registry.url=http://localhost:9091
spring.kafka.consumer.key-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.key.delegate.class=org.apache.kafka.common.serialization.IntegerDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=io.confluent.kafka.serializers.KafkaAvroDeserializer
spring.kafka.consumer.properties.specific.avro.reader=true
spring.kafka.consumer.properties.partition.assignment.strategy=org.apache.kafka.clients.consumer.RoundRobinAssignor
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.IntegerSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
spring.kafka.producer.properties.schema.registry.url=http://localhost:9091
kafka.replication.factor=1
kafka.partition.count=3
kafka.retention.days=3
kafka.posting.timout.milliseconds=1500
kafka.host=localhost

# ShedLock Scheduling Lock
shedlock.lockAtMostFor.default=PT30M
shedlock.lockAtLeastFor.default=PT5M

# OAuth2
oauth2.realm=piper1970
oauth2.resourceserver.auth.url=http://localhost:8180/realms/piper1970/protocol/openid-connect/auth
oauth2.resourceserver.token.url=http://localhost:8180/realms/piper1970/protocol/openid-connect/token
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8180/realms/piper1970
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8180/realms/piper1970/protocol/openid-connect/certs

# OpenAPI/Swagger
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.oauth.client-id=${OAUTH2_CLIENT_ID}
springdoc.swagger-ui.oauth.client-secret=${OAUTH2_CLIENT_SECRET}
springdoc.swagger-ui.oauth.use-pkce-with-authorization-code-grant=true
springdoc.swagger-ui.oauth.realm=${oauth2.realm}
springdoc.swagger-ui.oauth.appName=${OAUTH2_CLIENT_ID}]
open-api.oauth2.resourceserver.auth.url=http://localhost:8180/realms/piper1970/protocol/openid-connect/auth
open-api.oauth2.resourceserver.token.url=http://localhost:8180/realms/piper1970/protocol/openid-connect/token

api.gateway.url=http://localhost:8080







