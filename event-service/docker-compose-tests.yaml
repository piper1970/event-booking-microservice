
services:

  postgres-events-test:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres_password_test
    volumes:
      - ./test/db/scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"

  zipkin-events-test:
    image: openzipkin/zipkin:3
    restart: always
    shm_size: 128mb
    ports:
      - "9411:9411"

  zookeeper-events-test:
    image: confluentinc/cp-zookeeper:7.9.0
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "2181" ]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka-events-test:
    image: confluentinc/cp-kafka:7.9.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-events-test:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-events-test:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    depends_on:
      zookeeper-events-test:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list" ]
      interval: 30s
      timeout: 10s
      retries: 5

  schema-registry-events-test:
    image: confluentinc/cp-schema-registry:7.5.0
    hostname: schema-registry-events-test
    depends_on:
      kafka-events-test:
        condition: service_healthy
    ports:
      - "9091:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry-events-test
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka-events-test:29092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    healthcheck:
      test: curl --output /dev/null --silent --head --fail http://schema-registry-events-test:8081/subjects
      interval: 30s
      timeout: 10s
      retries: 3
